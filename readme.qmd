# RexburgStore (BYUI Marketplace)

RexburgStore (BYUI Marketplace)

## Team Members
* Shepherd Ncube
* Mark Christensen
* Jaime Gutierrez Zevallos
* Umah Umah

## Software Description
A Django-powered campus marketplace where students can create accounts, post listings, browse categories, and communicate directly with sellers using a built-in messaging system. The site includes dashboard management, real-time chat support, and features for marking listings as sold.

## Architecture
This application follows the standard Django MVC (Model-View-Controller) structure.
* Models: Users, Listings, Messages
* Views: Dynamic page rendering, dashboard, listing detail views
* Controllers: Django Views + Ably Integration for real-time communication

## Instructions for Build and Use

Steps to build and/or run the software:

1. Clone or download the repository into a local folder  
2. Navigate into the project folder:  
   ```bash
   cd RexburgStore
   ```
3. Install these packages:
   ```bash
   pip install django
   pip install pillow          
   pip install sweetify        
   pip install ably             
   ```

Instructions for using the software:

1. Start the Django development server:  
   ```bash
   python manage.py runserver
   ```
2. Access the site at `http://127.0.0.1:8000/`
3. Register a user, create listings, and explore features

## Development Environment 

To recreate the development environment, you need the following software and/or libraries with the specified versions:

* Python 3.11 or higher
* Django 5.2+
* Visual Studio Code (with Python extension)
* Google Chrome or Firefox

## Useful Websites to Learn More

I found these websites useful in developing this software:

* [Django Documentation](https://docs.djangoproject.com/en/5.2/)
* [Ably Realtime Docs](https://ably.com/docs)
* [SweetAlert2 Documentation](https://sweetalert2.github.io/)
* [W3Schools Django Tutorial](https://www.w3schools.com/django/)
* [Pillow Image Library](https://pillow.readthedocs.io/en/stable/)

## Software Features
- [x] User authentication and registration
- [x] Dashboard to manage user listings
- [x] Create, edit, and delete listings
- [x] Upload listing images
- [x] Real-time messaging between users (Ably)
- [x] Filter listings by category
- [ ] Mark listings as sold with status badge
- [ ] Add search by keyword and price range
- [ ] Listing favorites and reporting system
- [ ] User profile editing and display all listings by a user
- [ ] Admin moderation tools and analytics
- [ ] Mobile responsiveness improvements
- [ ] Seller feedback and ratings

## Team Communication
We communicated through regular in-person meetings, shared documents, and GitHub issues. We also used instant messaging platforms to coordinate work.

## Team Responsibilities
* Shepherd Ncube – Backend development, messaging system, and database models
* Mark Christensen – Backend development, listing management, and user authentication
* Jaime Gutierrez Zevallos – Frontend development, UI/UX design, and listing display
* Umah Umah – Frontend development, real-time chat integration, and testing

## Reflections

### What Went Well
1. Regular team check-ins helped us stay aligned on priorities and resolve issues early.
2. Having a clear division of tasks allowed us to work in parallel and meet deadlines.
3. Having a front end and back end team allowed us to focus on the core functionality.

### What Didn't Go Well
1. Time management became a challenge near the end of the sprint.
2. Not all planned features were completed due to underestimating complexity.
3. Testing coverage was low, leading to missed bugs during deployment.

### Future Improvements
* Allocate more time for unexpected delays and testing.
* Break tasks into smaller, more manageable units.
* Begin integrating and testing new features earlier in the sprint.